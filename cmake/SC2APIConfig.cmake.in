# Config file for the SC2API package.
#
# It defines the following variables
#  SC2API_INCLUDE_DIRS - include directories for sc2api
#  SC2API_LIBRARIES    - libraries to link against
#
# It does not define the following variables
#  SC2API_EXECUTABLE   - there are no exectuables at this time

# Compute paths
get_filename_component(SC2API_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
set(SC2API_INCLUDE_DIRS "@CONF_INCLUDE_DIRS@")
get_filename_component(SC2API_INCLUDE_DIRS ${SC2API_INCLUDE_DIRS} ABSOLUTE)

# This is disabled right now, please see s2client-api/cmake/install.cmake for an
# explanation of why.
# Our library dependencies (contains definitions for IMPORTED targets)
# if(NOT TARGET sc2_api AND NOT SC2API_BINARY_DIR)
#   include("${SC2API_CMAKE_DIR}/SC2APITargets.cmake")
# endif()

find_package(Protobuf REQUIRED)

# This isn't true because of the disabled including of the SC2APITargets.cmake
# ~These are IMPORTED targets created by SC2APITargets.cmake
set(
  SC2API_LIBRARIES
  sc2api
  sc2lib
  sc2protocol
  sc2utils
  ${Protobuf_LIBRARIES} # Required to link with sc2protocol
  civetweb # Required to link with sc2protocol
  dl # Required to link with civetweb
  pthread # Required to link with civetweb
)
if(NOT APPLE)
  set(SC2API_LIBRARIES ${SC2API_LIBRARIES} sc2renderer)
endif()

# If we had executables.. (update file header please)
# set(SC2API_EXECUTABLE [target names])
